import { IAsset } from 'webgi/extras/asset_manager/AssetManager';
import { ViewerApp } from 'webgi/viewer/ViewerApp';
export type TPreset = IAsset | string;
export declare class PresetGroup {
    presets: TPreset[];
    name: string;
    selected: TPreset | undefined;
    apply(viewer: ViewerApp, preset?: TPreset, importOptions?: any): Promise<any>;
    clear(): void;
    constructor(name?: string);
}
export declare class BackgroundPresetGroup extends PresetGroup {
    name: string;
    apply(viewer: ViewerApp, preset: TPreset): Promise<any>;
}
export declare class EnvironmentPresetGroup extends PresetGroup {
    name: string;
    apply(viewer: ViewerApp, preset: TPreset): Promise<any>;
}
export declare class GemEnvironmentPresetGroup extends PresetGroup {
    readonly key: 'envMap' | 'envMap2' | 'envMap3';
    name: string;
    constructor(key?: 'envMap' | 'envMap2' | 'envMap3');
    apply(viewer: ViewerApp, preset: TPreset): Promise<any>;
}
export declare class PluginPresetGroup extends PresetGroup {
    apply(viewer: ViewerApp, preset: TPreset): Promise<any>;
}
export declare class MaterialLibPresetGroupPresetGroup extends PluginPresetGroup {
    name: string;
    apply(viewer: ViewerApp, preset: TPreset): Promise<any>;
}
export declare class VJSONPresetGroup extends PresetGroup {
    name: string;
    usePresetCamera: boolean;
    apply(viewer: ViewerApp, preset: IAsset): Promise<any>;
}
//# sourceMappingURL=presetGroups.d.ts.map