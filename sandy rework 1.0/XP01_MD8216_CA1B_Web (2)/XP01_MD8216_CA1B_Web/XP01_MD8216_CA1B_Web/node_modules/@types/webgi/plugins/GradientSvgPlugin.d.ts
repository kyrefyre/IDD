import { AViewerPlugin } from 'webgi/core/AViewerPlugin';
import { Color, Texture, Vector2 } from 'three';
import { ViewerApp } from 'webgi/viewer/ViewerApp';
export declare class GradientSvgPlugin extends AViewerPlugin<''> {
    static readonly PluginType = "GradientSvgPlugin";
    enabled: boolean;
    constructor(enabled?: boolean);
    dependencies: never[];
    options: SvgOptions;
    type: SvgOptions['type'];
    gradientUnits: SvgOptions['gradientUnits'];
    position1: Vector2;
    position2: Vector2;
    angle: number;
    radius: number;
    center: Vector2;
    focus: Vector2;
    spreadMethod: SvgRadialGradientOptions['spreadMethod'];
    private _svgGradient;
    private _svgElement?;
    private _needsUpdate;
    _refreshOptions(): void;
    setDirty(): void;
    colors: Color[];
    addColor(): void;
    color1: Color;
    color2: Color;
    applyToBackground: boolean;
    protected _svgTexture?: Texture;
    refreshSvg(): void;
    autoRefresh: boolean;
    onAdded(viewer: ViewerApp): Promise<void>;
}
export interface SvgLinearGradientOptions {
    angle: number;
    x1: number;
    y1: number;
    x2: number;
    y2: number;
}
export interface SvgRadialGradientOptions {
    cx: number;
    cy: number;
    r: number;
    fx: number;
    fy: number;
    spreadMethod: 'pad' | 'repeat' | 'reflect';
}
export interface RawSvgGradient {
    id: string;
    type: 'linear' | 'radial';
    attributes: {
        gradientUnits?: 'objectBoundingBox' | 'userSpaceOnUse';
    } & (Partial<SvgRadialGradientOptions> | Partial<SvgLinearGradientOptions>);
    stops: SVGStopElement[];
}
export interface SvgOptions {
    id: string;
    type: 'linear' | 'radial';
    gradientUnits?: 'objectBoundingBox' | 'userSpaceOnUse';
    linearOptions?: SvgLinearGradientOptions;
    radialOptions?: SvgRadialGradientOptions;
}
export declare class SvgGradient {
    private options?;
    private colors?;
    constructor();
    get(colors: Color[], options: SvgOptions): SVGElement;
    private createSvgElement;
    private createColorStop;
    private colorsToStops;
    private createGradientElement;
    private createGradient;
}
//# sourceMappingURL=GradientSvgPlugin.d.ts.map