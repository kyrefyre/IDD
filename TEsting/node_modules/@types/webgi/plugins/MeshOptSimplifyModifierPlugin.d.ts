import { BufferGeometry } from 'three';
import { SimplifyModifierPlugin } from './SimplifyModifierPlugin';
import { IGeometry } from 'webgi/interfaces';
/**
 * Simplify modifier using [meshoptimizer](https://github.com/zeux/meshoptimizer) library.
 * Loads the library at runtime from a customisable cdn url.
 */
export declare class MeshOptSimplifyModifierPlugin extends SimplifyModifierPlugin {
    readonly rootNode: HTMLHeadElement;
    static readonly PluginType = "MeshOptSimplifyModifierPlugin";
    constructor(initialize?: boolean, rootNode?: HTMLHeadElement);
    get initialized(): boolean;
    static SIMPLIFIER_URL: string;
    protected _initializing?: Promise<void>;
    protected _script?: HTMLScriptElement;
    initialize(): Promise<void>;
    dispose(): void;
    errorThreshold: number;
    lockBorder: boolean;
    protected _simplify(geometry: BufferGeometry, count: number): IGeometry;
}
declare global {
    interface Window {
        MeshoptSimplifier?: any;
    }
}
//# sourceMappingURL=MeshOptSimplifyModifierPlugin.d.ts.map