import { AGeometryGenerator } from 'webgi/helpers/threejs/AGeometryGenerator';
export interface CylinderGeometryGeneratorParams {
    radiusTop: number;
    radiusBottom: number;
    height: number;
    radialSegments: number;
    heightSegments: number;
    openEnded: boolean;
    thetaStart: number;
    thetaLength: number;
}
export declare class CylinderGeometryGenerator extends AGeometryGenerator<CylinderGeometryGeneratorParams> {
    defaultParams: {
        radiusTop: number;
        radiusBottom: number;
        height: number;
        radialSegments: number;
        heightSegments: number;
        openEnded: boolean;
        thetaStart: number;
        thetaLength: number;
    };
    protected _generateTorso(state: any): void;
    protected _generateCap(state: any, top: boolean): void;
    protected _generateData(params: CylinderGeometryGeneratorParams): {
        radialSegments: number;
        heightSegments: number;
        radiusTop: number;
        radiusBottom: number;
        height: number;
        openEnded: boolean;
        thetaStart: number;
        thetaLength: number;
        indices: never[];
        vertices: never[];
        normals: never[];
        uvs: never[];
        numberOfVertices: number;
        groupStart: number;
        groups: never[];
        index: number;
        indexArray: never[];
        halfHeight: number;
    };
}
//# sourceMappingURL=CylinderGeometryGenerator.d.ts.map