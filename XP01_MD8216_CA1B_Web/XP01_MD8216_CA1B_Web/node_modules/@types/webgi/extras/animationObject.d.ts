import { AnimationOptions, Easing } from 'popmotion';
import { UiObjectConfig, UiObjectType } from 'webgi/interfaces';
import { EasingFunctionType } from '../helpers/animation';
export type TUpdaterType = 'scene' | 'renderer' | 'viewer' | 'camera';
export interface IAnimationObject<V> {
    access?: string;
    duration?: number;
    delay?: number;
    ease?: Easing | EasingFunctionType;
    updater?: (TUpdaterType)[];
    animSet?: IAnimSet;
    animSetParallel?: boolean;
    uiRef?: UiObjectConfig;
    name?: string;
    uiObjectType?: UiObjectType;
    targetObject?: Record<string, any>;
    options: AnimationOptions<V>;
    to?: V | ((fromVal: V, target: any) => V);
    from?: V;
    animate?: () => Promise<any>;
}
export type IAnimSet = (IAnimationObject<any>)[];
export declare function deepAccessObject(access: string | string[], tar: any, throwOnInvalid?: boolean): any;
export declare function extractAnimationKey(o: IAnimationObject<any>, target: any, extraGetters?: Record<string, (acc: string[]) => {
    tar: any;
    i: number;
} | undefined>): {
    key: undefined;
    tar: any;
} | {
    key: string;
    tar: any;
};
export declare function animateObject(target: any, o: IAnimationObject<any>, updaters: Record<TUpdaterType, () => void>): Promise<any>;
export declare function animateSet(target: any, anims: IAnimSet, updaters: Record<TUpdaterType, () => void>, parallel?: boolean): Promise<any[] | undefined>;
//# sourceMappingURL=animationObject.d.ts.map