import { Spherical } from 'three';
import { AViewerPlugin } from 'webgi/core/AViewerPlugin';
import { ViewerApp } from 'webgi/viewer/ViewerApp';
export declare class InteractionPromptPlugin extends AViewerPlugin<''> {
    static readonly PluginType = "InteractionPromptPlugin";
    enabled: boolean;
    currentSphericalPosition?: Spherical;
    animationRunning: boolean;
    cursorEl?: HTMLElement;
    interactionsDisabled: boolean;
    /**
     * Animation duration in ms
     */
    animationDuration: number;
    /**
     * Animation distance in pixels
     */
    animationDistance: number;
    animationPauseDuration: number;
    rotationDistance: number;
    yOffset: number;
    /**
     * Autostart after camera stop
     */
    autoStart: boolean;
    /**
     * Time in ms to wait before auto start after the camera stops.
     */
    autoStartDelay: number;
    /**
     * Auto stop on user interaction pointer down or wheel
     */
    autoStop: boolean;
    /**
     * Auto start on scene object load. This requires {@link autoStart} to be true
     */
    autoStartOnObjectLoad: boolean;
    autoStartOnObjectLoadDelay: number;
    currentTime: number;
    lastActionTime: number;
    constructor(enabled?: boolean);
    private _xDamper;
    pointerIcon: string;
    onAdded(viewer: ViewerApp): Promise<void>;
    onRemove(viewer: ViewerApp): Promise<void>;
    private _activeCameraUpdate;
    private _addSceneObject;
    private _initializeCursor;
    onlyOnOrbitControls: boolean;
    private _orbitWarning;
    startAnimation: () => void;
    stopAnimation: () => void;
    private _pointerDown;
    private _x;
    private _preFrame;
    private _disabledBy;
    disable: (key: any) => void;
    enable: (key: any) => void;
    isDisabled: () => boolean;
}
//# sourceMappingURL=InteractionPromptPlugin.d.ts.map